{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","API_URL","getAll","a","fetch","result","json","TypeOfGoods","get5First","then","array","sorted","sort","firstItem","secondItem","localeCompare","length","sortFiveFirst","getRedGoods","filter","item","App","useState","setGoods","None","currentType","setCurrentType","isLoading","setLoading","hasLoadingError","setLoadingError","handleClickButton","getGoods","typeOfGoods","catch","finally","className","type","onClick","AllGoods","FirstFiveGoods","RedGoods","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,U,8BCRZC,EAAO,wEAmBN,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACgBC,MAAMH,GADtB,cACCI,EADD,yBAGEA,EAAOC,QAHT,4C,sBAMA,ICrBFC,EDqBQC,EAAY,WACvB,OAAON,IACJO,MAAK,SAAAf,GAAK,OAzBf,SAAuBgB,GACrB,IAAMC,EAAS,YAAID,GAChBE,MAAK,SAACC,EAAWC,GAAZ,OACJD,EAAUd,KAAKgB,cAAcD,EAAWf,SAK5C,OAFAY,EAAOK,OAAS,EAETL,EAiBUM,CAAcvB,OAGpBwB,EAAc,WACzB,OAAOhB,IACJO,MAAK,SAAAf,GAAK,OAnBQgB,EAmBUhB,EAnBKI,EAmBE,MAlBrB,YAAIY,GAAOS,QAAO,SAAAC,GAAI,OAAIA,EAAKtB,QAAUA,KAD5D,IAAuBY,EAAeZ,O,SCTjCS,K,QAAAA,E,sBAAAA,E,mCAAAA,E,uBAAAA,M,KAOE,IAAMc,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO5B,EAAP,KAAc6B,EAAd,KACA,EAAsCD,mBAASf,EAAYiB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA2CN,oBAAS,GAApD,mBAAOO,EAAP,KAAwBC,EAAxB,KAEMC,EAAoB,SACxBC,GAEI,IADJC,EACG,uDADW1B,EAAYiB,KAE1B,OAAO,WACDC,IAAgBQ,IAClBL,GAAW,GACXI,IACGvB,KAAKc,GACLW,OAAM,kBAAOJ,GAAgB,MAC7BK,SAAQ,WACPP,GAAW,GACXA,GAAW,MAEfF,EAAeO,MAKrB,OACE,sBAAKG,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASP,EAAkB7B,EAAQK,EAAYgC,UAC/CH,UAAU,aAJZ,SAMGT,GAAaF,IAAgBlB,EAAYgC,SAEtC,qCACE,mBAAGH,UAAU,0BACb,8CAGF,mBAGN,wBACEC,KAAK,SACL,UAAQ,oBACRC,QAASP,EAAkBvB,EAAWD,EAAYiC,gBAHpD,SAKGb,GAAaF,IAAgBlB,EAAYiC,eAEtC,qCACE,mBAAGJ,UAAU,0BACb,8CAGF,uBAGN,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASP,EAAkBb,EAAaX,EAAYkC,UAHtD,SAKGd,GAAaF,IAAgBlB,EAAYkC,SAEtC,qCACE,mBAAGL,UAAU,0BACb,8CAGF,mBAGLP,EAEG,sEAKA,cAAC,EAAD,CAAWnC,MAAOA,QC7F5BgD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.26b16589.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nfunction sortFiveFirst(array: Good[]) {\n  const sorted = [...array]\n    .sort((firstItem, secondItem) => (\n      firstItem.name.localeCompare(secondItem.name)\n    ));\n\n  sorted.length = 5;\n\n  return sorted;\n}\n\nfunction filterByColor(array: Good[], color: string) {\n  const filtered = [...array].filter(item => item.color === color);\n\n  return filtered;\n}\n\nexport async function getAll(): Promise<Good[]> {\n  const result = await fetch(API_URL);\n\n  return result.json();\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => sortFiveFirst(goods));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => filterByColor(goods, 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nenum TypeOfGoods {\n  None = '',\n  AllGoods = 'all-button',\n  FirstFiveGoods = 'first-five-button',\n  RedGoods = 'red-button',\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [currentType, setCurrentType] = useState(TypeOfGoods.None);\n  const [isLoading, setLoading] = useState(false);\n  const [hasLoadingError, setLoadingError] = useState(false);\n\n  const handleClickButton = (\n    getGoods: () => Promise<Good[]>,\n    typeOfGoods = TypeOfGoods.None,\n  ) => {\n    return () => {\n      if (currentType !== typeOfGoods) {\n        setLoading(true);\n        getGoods()\n          .then(setGoods)\n          .catch(() => (setLoadingError(true)))\n          .finally(() => {\n            setLoading(false);\n            setLoading(false);\n          });\n        setCurrentType(typeOfGoods);\n      }\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleClickButton(getAll, TypeOfGoods.AllGoods)}\n        className=\"buttonload\"\n      >\n        {isLoading && currentType === TypeOfGoods.AllGoods\n          ? (\n            <>\n              <i className=\"fa fa-spinner fa-spin\" />\n              <span>Loading</span>\n            </>\n          )\n          : 'Load all goods'}\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleClickButton(get5First, TypeOfGoods.FirstFiveGoods)}\n      >\n        {isLoading && currentType === TypeOfGoods.FirstFiveGoods\n          ? (\n            <>\n              <i className=\"fa fa-spinner fa-spin\" />\n              <span>Loading</span>\n            </>\n          )\n          : 'Load 5 first goods'}\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleClickButton(getRedGoods, TypeOfGoods.RedGoods)}\n      >\n        {isLoading && currentType === TypeOfGoods.RedGoods\n          ? (\n            <>\n              <i className=\"fa fa-spinner fa-spin\" />\n              <span>Loading</span>\n            </>\n          )\n          : 'Load red goods'}\n      </button>\n\n      {hasLoadingError\n        ? (\n          <div>\n            An error occored when loadin goods!\n          </div>\n        )\n        : (\n          <GoodsList goods={goods} />\n        )}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}